//给定一个正整数 num，编写一个函数，如果 num 是一个完全平方数，则返回 True，否则返回 False。
//
// 说明：不要使用任何内置的库函数，如 sqrt。
//
// 示例 1：
//
// 输入：16
//输出：True
//
// 示例 2：
//
// 输入：14
//输出：False
//
// Related Topics 数学 二分查找



//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    /**
     * 时间复杂度为O(LOGN)
     * @param num
     * @return
     */
    public boolean isPerfectSquare(int num) {
        int left = 0, right = num, middle, result;
        while (left <= right) {
            middle = left + (right - left) / 2;
            result = middle * middle;
            if (result > num) {
                right = middle - 1;
            } else if (result < num){
                left = middle + 1;
            } else {
                return true;
            }
        }
        return false;
    }

    /**
     * 牛顿迭代法
     * @param num
     * @return
     */
    public boolean isPerfectSquare1(int num) {
        if (num == 1)
            return true;
        long i = num >> 1;
        while (i * i > num) {
            i = (i + num / i) >> 1;
        }
        return i * i == num;
    }

    /**
     * 奇数 等差数列求和
     * @param num
     * @return
     */
    public boolean isPerfectSquare2(int num) {
        int i = 1;
        while (i < num) {
            i = 2 * i + 2;
        }
        return i == num;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
