class Solution {
  public boolean searchMatrix(int[][] matrix, int target) {
    //数组长度
    int m = matrix.length;
    if (m == 0) {
       return false;
    }
    //二位数组列的长度
    int n = matrix[0].length;
    // 二分查找
    int left = 0, right = m * n - 1;
    int pivotIdx;
    int pivotElement;

    while (left <= right) {
      pivotIdx = (left + right) / 2;
      pivotElement = matrix[pivotIdx / n][pivotIdx % n];
      if (target == pivotElement) {
        return true;
      }else {
        if (target < pivotElement) {
           right = pivotIdx - 1;
        }else {
           left = pivotIdx + 1;
        }
      }
    }
    return false;
  }
}